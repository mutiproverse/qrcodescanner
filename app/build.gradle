plugins {
    id "io.sentry.android.gradle" version "5.1.0"
    id 'com.android.application'
    id 'kotlin-android'
//    id 'kotlin-android-extensions'
    id 'kotlin-kapt'

}

sentry {
    includeProguardMapping = true
    autoUploadProguardMapping = true
}

android {
    compileSdkVersion 35
    buildToolsVersion '35.0.0'
    namespace 'com.redlable.qrcodescanner'

    defaultConfig {
        applicationId "com.redlable.qrcodescanner"
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 1
        versionName "1.1"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary  true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.incremental":"true"]
            }
        }

        buildConfigField "boolean", "ERROR_REPORTS_ENABLED_BY_DEFAULT", "true"
    }
//    dynamicFeatures = [':browser']

   /* flavorDimensions "market"
    productFlavors {
        alt {
            dimension "market"
            // Configurations for the 'alt' flavor
        }
        standard {
            dimension "market"
            // Configurations for the 'standard' flavor
        }
    }*/

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8.toString()
        targetCompatibility = JavaVersion.VERSION_1_8.toString()
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

//    flavorDimensions "market"
//    productFlavors {
//        appGallery {}
//        googlePlay {
//            applicationId "org.barcodescanner"
//        }
//        fDroid {
//            buildConfigField "boolean", "ERROR_REPORTS_ENABLED_BY_DEFAULT", "false"
//        }
//    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Android
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation project(':browser')
    implementation project(':browser')
    implementation project(':browser')

    // Room
    final roomVersion = '2.6.1'
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"

    // Paging
    final pagingVersion = "1.0.1"
    implementation "android.arch.paging:runtime:$pagingVersion"
    implementation "android.arch.paging:rxjava2:$pagingVersion"

    // Barcode Scanner
    implementation 'com.aevi.barcode:barcode-scanner:3.1.1.1'
    // Barcode Image Generator
    implementation 'com.github.yuriy-budiyev:code-scanner:2.3.0'
    //noinspection GradleDependency
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'

    // VCard Parser
    implementation 'com.googlecode.ez-vcard:ez-vcard:0.12.1'

    // Base32 Encoder
    implementation 'commons-codec:commons-codec:1.18.0'

    // OTP
    implementation 'dev.turingcomplete:kotlin-onetimepassword:2.4.1'

    // Rx
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:2.2.0"

    // Image Crop Library
    implementation 'io.github.ksrainarthas:simplecropview:2.0.0'
    // Date time picker
    implementation 'se.warting.datepicker:singledateandtimepicker:2.2.12'
    // Sentry
    implementation 'io.sentry:sentry-android:8.2.0'

//    appGalleryImplementation project(':browser')  // Only for appGallery flavor
    // or use implementation for all flavors if you want to include it in all
    implementation project(':browser')

}